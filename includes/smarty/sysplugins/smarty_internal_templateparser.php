<?php

class TP_yyToken implements ArrayAccess
{
    public $string   = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string)$s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } else if (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[ $offset ]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[ $offset ];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ? $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[ $offset ] = $value->metadata;
            }
        } else if ($value) {
            $this->metadata[ $offset ] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[ $offset ]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;


#line 11 "../smarty/lexer/smarty_internal_templateparser.y"

/**
 * Smarty Template Parser Class
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 *
 * @author Uwe Tews <uwe.tews@googlemail.com>
 */
class Smarty_Internal_Templateparser
{
    #line 23 "../smarty/lexer/smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";

    /**
     * result status
     *
     * @var bool
     */
    public $successful = true;

    /**
     * return value
     *
     * @var mixed
     */
    public $retvalue = 0;

    /**
     * @var
     */
    public $yymajor;

    /**
     * last index of array variable
     *
     * @var mixed
     */
    public $last_index;

    /**
     * last variable name
     *
     * @var string
     */
    public $last_variable;

    /**
     * root parse tree buffer
     *
     * @var Smarty_Internal_ParseTree
     */
    public $root_buffer;

    /**
     * current parse tree object
     *
     * @var Smarty_Internal_ParseTree
     */
    public $current_buffer;

    /**
     * lexer object
     *
     * @var Smarty_Internal_Templatelexer
     */
    public $lex;

    /**
     * internal error flag
     *
     * @var bool
     */
    private $internalError = false;

    /**
     * {strip} status
     *
     * @var bool
     */
    public $strip = false;
    /**
     * compiler object
     *
     * @var Smarty_Internal_TemplateCompilerBase
     */
    public $compiler = null;

    /**
     * smarty object
     *
     * @var Smarty
     */
    public $smarty = null;

    /**
     * template object
     *
     * @var Smarty_Internal_Template
     */
    public $template = null;

    /**
     * block nesting level
     *
     * @var int
     */
    public $block_nesting_level = 0;

    /**
     * security object
     *
     * @var Smarty_Security
     */
    public $security = null;

    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_prefix = array();

    /**
     * security object
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_postfix = array();

    /**
     * constructor
     *
     * @param Smarty_Internal_Templatelexer        $lex
     * @param Smarty_Internal_TemplateCompilerBase $compiler
     */
    function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->template = $this->compiler->template;
        $this->smarty = $this->template->smarty;
        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;
        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();
    }

    /**
     * insert PHP code in current buffer
     *
     * @param string $code
     */
    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));
    }

    /**
     *  merge PHP code with prefix code and return parse tree tag object
     *
     * @param string $code
     *
     * @return Smarty_Internal_ParseTree_Tag
     */
    public function mergePrefixCode($code)
    {
        $tmp = '';
        foreach ($this->compiler->prefix_code as $preCode) {
            $tmp .= $preCode;
        }
        $this->compiler->prefix_code = array();
        $tmp .= $code;
        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));
    }


    const TP_VERT                   = 1;
    const TP_COLON                  = 2;
    const TP_PHP                    = 3;
    const TP_TEXT                   = 4;
    const TP_STRIPON                = 5;
    const TP_STRIPOFF               = 6;
    const TP_LITERALSTART           = 7;
    const TP_LITERALEND             = 8;
    const TP_LITERAL                = 9;
    const TP_RDEL                   = 10;
    const TP_SIMPELOUTPUT           = 11;
    const TP_LDEL                   = 12;
    const TP_DOLLARID               = 13;
    const TP_EQUAL                  = 14;
    const TP_SIMPLETAG              = 15;
    const TP_ID                     = 16;
    const TP_PTR                    = 17;
    const TP_LDELMAKENOCACHE        = 18;
    const TP_LDELIF                 = 19;
    const TP_LDELFOR                = 20;
    const TP_SEMICOLON              = 21;
    const TP_INCDEC                 = 22;
    const TP_TO                     = 23;
    const TP_STEP                   = 24;
    const TP_LDELFOREACH            = 25;
    const TP_SPACE                  = 26;
    const TP_AS                     = 27;
    const TP_APTR                   = 28;
    const TP_LDELSETFILTER          = 29;
    const TP_SMARTYBLOCKCHILDPARENT = 30;
    const TP_CLOSETAG               = 31;
    const TP_LDELSLASH              = 32;
    const TP_ATTR                   = 33;
    const TP_INTEGER                = 34;
    const TP_COMMA                  = 35;
    const TP_OPENP                  = 36;
    const TP_CLOSEP                 = 37;
    const TP_MATH                   = 38;
    const TP_UNIMATH                = 39;
    const TP_ISIN                   = 40;
    const TP_QMARK                  = 41;
    const TP_NOT                    = 42;
    const TP_TYPECAST               = 43;
    const TP_HEX                    = 44;
    const TP_DOT                    = 45;
    const TP_INSTANCEOF             = 46;
    const TP_SINGLEQUOTESTRING      = 47;
    const TP_DOUBLECOLON            = 48;
    const TP_NAMESPACE              = 49;
    const TP_AT                     = 50;
    const TP_HATCH                  = 51;
    const TP_OPENB                  = 52;
    const TP_CLOSEB                 = 53;
    const TP_DOLLAR                 = 54;
    const TP_LOGOP                  = 55;
    const TP_SLOGOP                 = 56;
    const TP_TLOGOP                 = 57;
    const TP_SINGLECOND             = 58;
    const TP_QUOTE                  = 59;
    const TP_BACKTICK               = 60;
    const YY_NO_ACTION              = 532;
    const YY_ACCEPT_ACTION          = 531;
    const YY_ERROR_ACTION           = 530;

    const YY_SZ_ACTTAB = 1993;
    static public $yy_action    = array(272, 8, 131, 237, 275, 80, 179, 230, 6, 84, 20, 324, 175, 101, 116, 41, 16, 327,
                                        225, 299, 257, 232, 277, 235, 214, 26, 216, 202, 42, 106, 190, 40, 43, 314, 234,
                                        278, 310, 244, 212, 355, 82, 1, 204, 291, 114, 272, 8, 132, 79, 275, 196, 246,
                                        230, 6, 84, 11, 177, 267, 269, 116, 21, 197, 14, 225, 252, 257, 232, 11, 205,
                                        31, 26, 223, 101, 42, 14, 78, 40, 43, 314, 234, 290, 220, 245, 212, 293, 82, 1,
                                        316, 291, 446, 272, 8, 134, 79, 275, 208, 246, 230, 6, 84, 11, 446, 291, 114,
                                        116, 15, 204, 14, 225, 136, 257, 232, 251, 235, 254, 26, 185, 298, 42, 90, 78,
                                        40, 43, 314, 234, 213, 310, 181, 212, 120, 82, 1, 204, 291, 99, 272, 8, 136, 79,
                                        275, 208, 402, 230, 6, 84, 253, 289, 82, 246, 116, 291, 190, 280, 225, 204, 257,
                                        232, 402, 235, 189, 12, 18, 17, 42, 402, 204, 40, 43, 314, 234, 228, 310, 78,
                                        212, 402, 82, 1, 204, 291, 326, 272, 8, 134, 79, 275, 208, 399, 230, 6, 84, 402,
                                        154, 459, 237, 116, 182, 23, 402, 225, 459, 257, 232, 399, 194, 239, 26, 184,
                                        298, 42, 399, 158, 40, 43, 314, 234, 106, 310, 246, 212, 190, 82, 1, 204, 291,
                                        7, 272, 8, 134, 79, 275, 195, 357, 230, 6, 84, 256, 19, 256, 19, 116, 279, 78,
                                        279, 225, 137, 257, 232, 11, 211, 183, 26, 9, 227, 42, 14, 306, 40, 43, 314,
                                        234, 93, 310, 214, 212, 270, 82, 1, 106, 291, 2, 272, 8, 134, 79, 275, 193, 224,
                                        230, 6, 84, 101, 109, 256, 19, 116, 29, 231, 279, 225, 141, 257, 232, 304, 235,
                                        214, 26, 217, 233, 42, 106, 11, 40, 43, 314, 234, 172, 310, 14, 212, 243, 82, 1,
                                        36, 291, 313, 272, 8, 135, 79, 275, 208, 222, 230, 6, 84, 446, 36, 291, 292,
                                        116, 246, 85, 302, 225, 218, 257, 232, 446, 235, 95, 26, 136, 321, 42, 221, 447,
                                        40, 43, 314, 234, 291, 310, 459, 212, 78, 82, 1, 447, 291, 459, 272, 8, 134, 79,
                                        275, 199, 35, 230, 6, 84, 475, 475, 475, 475, 116, 475, 140, 475, 225, 82, 257,
                                        232, 291, 235, 304, 26, 5, 101, 42, 233, 3, 40, 43, 314, 234, 36, 310, 311, 212,
                                        92, 82, 1, 105, 291, 297, 272, 8, 133, 79, 275, 208, 475, 230, 6, 84, 137, 149,
                                        291, 278, 116, 296, 180, 9, 225, 312, 257, 232, 27, 235, 176, 4, 139, 148, 42,
                                        147, 446, 40, 43, 314, 234, 242, 310, 33, 212, 277, 82, 1, 446, 291, 14, 272, 8,
                                        136, 79, 275, 208, 163, 230, 6, 84, 204, 171, 189, 178, 116, 204, 277, 161, 225,
                                        367, 257, 232, 291, 235, 361, 12, 236, 277, 42, 278, 101, 40, 43, 314, 234, 11,
                                        310, 190, 212, 204, 82, 329, 14, 291, 204, 446, 233, 209, 79, 117, 70, 113, 287,
                                        259, 260, 238, 99, 446, 233, 240, 286, 114, 325, 274, 320, 210, 323, 144, 289,
                                        129, 119, 24, 261, 263, 264, 265, 177, 277, 203, 294, 272, 8, 145, 143, 275, 3,
                                        94, 230, 6, 84, 247, 331, 277, 277, 116, 189, 188, 329, 225, 157, 257, 232, 233,
                                        209, 317, 117, 70, 113, 146, 277, 190, 258, 99, 319, 268, 240, 286, 25, 277,
                                        150, 320, 210, 323, 179, 289, 204, 38, 282, 165, 277, 219, 329, 41, 16, 327,
                                        284, 233, 209, 277, 122, 63, 103, 248, 217, 186, 298, 99, 190, 400, 240, 286,
                                        278, 215, 142, 320, 210, 323, 91, 289, 20, 329, 167, 30, 277, 400, 233, 209,
                                        276, 122, 67, 113, 400, 110, 330, 446, 99, 271, 187, 240, 286, 129, 190, 318,
                                        320, 210, 323, 446, 289, 237, 152, 329, 278, 83, 315, 206, 233, 209, 262, 122,
                                        67, 113, 190, 288, 280, 273, 99, 256, 19, 240, 286, 162, 279, 155, 320, 210,
                                        323, 182, 289, 303, 86, 168, 11, 277, 160, 201, 272, 10, 305, 14, 275, 254, 138,
                                        230, 6, 84, 159, 256, 19, 88, 116, 190, 279, 278, 225, 329, 257, 232, 166, 38,
                                        233, 209, 11, 122, 67, 113, 475, 475, 277, 14, 99, 475, 459, 240, 286, 111, 169,
                                        266, 320, 210, 323, 278, 289, 303, 300, 13, 104, 87, 89, 207, 272, 10, 305, 303,
                                        275, 303, 303, 230, 6, 84, 459, 303, 303, 459, 116, 475, 303, 459, 225, 329,
                                        257, 232, 303, 303, 233, 209, 303, 122, 47, 103, 303, 112, 303, 303, 99, 303,
                                        303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 303, 301, 13, 329, 303,
                                        303, 303, 303, 233, 209, 303, 108, 50, 113, 256, 19, 303, 303, 99, 279, 303,
                                        240, 286, 303, 303, 303, 320, 210, 323, 11, 289, 173, 303, 329, 303, 303, 14,
                                        303, 233, 209, 303, 122, 54, 113, 204, 303, 303, 303, 99, 303, 303, 240, 286,
                                        191, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209, 303,
                                        122, 77, 113, 303, 303, 303, 303, 99, 303, 303, 240, 286, 44, 39, 37, 320, 210,
                                        323, 329, 289, 303, 303, 303, 233, 209, 303, 122, 74, 113, 322, 308, 307, 285,
                                        99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 303, 303, 329,
                                        303, 303, 303, 303, 233, 209, 303, 122, 49, 113, 204, 22, 303, 303, 99, 156,
                                        303, 240, 286, 179, 303, 303, 320, 210, 323, 277, 289, 329, 41, 16, 327, 303,
                                        233, 209, 303, 96, 53, 113, 303, 303, 303, 303, 99, 190, 303, 240, 286, 44, 39,
                                        37, 320, 210, 323, 329, 289, 303, 303, 303, 233, 209, 303, 122, 60, 113, 322,
                                        308, 307, 285, 99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289,
                                        303, 303, 329, 303, 303, 303, 303, 233, 209, 303, 122, 71, 113, 204, 303, 303,
                                        303, 99, 170, 303, 240, 286, 179, 303, 303, 320, 210, 323, 277, 289, 329, 41,
                                        16, 327, 303, 233, 198, 303, 115, 61, 113, 303, 303, 303, 303, 99, 190, 303,
                                        240, 286, 44, 39, 37, 320, 210, 323, 329, 289, 303, 303, 303, 233, 97, 303, 81,
                                        45, 107, 322, 308, 307, 285, 99, 255, 303, 240, 286, 303, 303, 303, 320, 210,
                                        323, 303, 289, 303, 303, 329, 303, 303, 303, 303, 233, 209, 303, 122, 62, 113,
                                        204, 303, 303, 303, 99, 303, 303, 240, 286, 283, 303, 303, 320, 210, 323, 303,
                                        289, 329, 303, 303, 303, 303, 233, 209, 303, 100, 69, 113, 303, 303, 303, 303,
                                        99, 303, 303, 240, 286, 44, 39, 37, 320, 210, 323, 329, 289, 303, 303, 303, 233,
                                        200, 303, 122, 58, 113, 322, 308, 307, 285, 99, 303, 303, 240, 286, 303, 303,
                                        303, 320, 210, 323, 303, 289, 303, 303, 329, 303, 303, 303, 303, 233, 209, 303,
                                        102, 68, 113, 204, 303, 303, 303, 99, 303, 303, 240, 286, 241, 303, 303, 320,
                                        210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209, 303, 122, 55, 113, 303,
                                        303, 303, 303, 99, 303, 303, 240, 286, 44, 39, 37, 320, 210, 323, 329, 289, 303,
                                        303, 303, 233, 209, 303, 122, 65, 113, 322, 308, 307, 285, 99, 303, 303, 240,
                                        286, 303, 303, 303, 320, 210, 323, 303, 289, 303, 303, 329, 303, 303, 303, 303,
                                        233, 209, 303, 122, 66, 113, 204, 303, 303, 303, 99, 303, 303, 240, 286, 192,
                                        303, 303, 320, 210, 323, 303, 289, 329, 303, 303, 303, 303, 233, 209, 303, 122,
                                        59, 113, 303, 303, 303, 303, 99, 303, 303, 240, 286, 44, 39, 37, 320, 210, 323,
                                        329, 289, 303, 303, 303, 233, 209, 303, 122, 56, 113, 322, 308, 307, 285, 99,
                                        303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 303, 303, 329, 303,
                                        303, 303, 303, 233, 209, 303, 122, 75, 113, 204, 303, 303, 303, 99, 303, 303,
                                        240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 329, 303, 303, 118, 303, 233,
                                        209, 303, 122, 51, 113, 303, 303, 303, 303, 99, 303, 303, 240, 286, 44, 39, 37,
                                        320, 210, 323, 329, 289, 303, 303, 303, 233, 209, 303, 122, 72, 113, 322, 308,
                                        307, 285, 99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323, 303, 289, 303,
                                        303, 329, 303, 303, 303, 303, 233, 209, 303, 122, 63, 113, 204, 303, 303, 303,
                                        99, 151, 303, 240, 286, 179, 303, 303, 320, 210, 323, 277, 289, 329, 41, 16,
                                        327, 303, 233, 209, 303, 122, 64, 113, 303, 303, 303, 303, 99, 190, 303, 240,
                                        286, 44, 39, 37, 320, 210, 323, 329, 289, 303, 303, 303, 233, 209, 303, 122, 46,
                                        113, 322, 308, 307, 285, 99, 303, 303, 240, 286, 303, 303, 303, 320, 210, 323,
                                        303, 289, 303, 303, 329, 303, 303, 303, 303, 233, 98, 303, 81, 48, 107, 303,
                                        303, 303, 303, 99, 153, 303, 240, 286, 179, 303, 303, 320, 210, 323, 277, 289,
                                        329, 41, 16, 327, 303, 233, 209, 303, 122, 73, 113, 303, 303, 303, 303, 99, 190,
                                        303, 240, 286, 44, 39, 37, 320, 210, 323, 329, 289, 303, 303, 303, 233, 209,
                                        303, 122, 57, 113, 322, 308, 307, 285, 99, 303, 303, 240, 286, 303, 303, 303,
                                        320, 210, 323, 303, 289, 303, 204, 329, 303, 303, 303, 303, 233, 209, 204, 122,
                                        76, 113, 303, 412, 412, 303, 99, 303, 303, 240, 286, 303, 303, 250, 320, 210,
                                        323, 120, 289, 303, 303, 28, 99, 11, 303, 303, 229, 44, 39, 37, 14, 249, 303,
                                        303, 289, 44, 39, 37, 446, 303, 412, 412, 412, 303, 322, 308, 307, 285, 303,
                                        303, 446, 303, 322, 308, 307, 285, 303, 412, 412, 412, 412, 303, 303, 329, 303,
                                        303, 303, 303, 233, 209, 303, 123, 303, 113, 303, 303, 303, 303, 99, 303, 406,
                                        303, 328, 303, 303, 303, 320, 210, 323, 329, 289, 406, 204, 406, 233, 209, 406,
                                        130, 303, 113, 303, 295, 303, 406, 99, 406, 303, 406, 281, 303, 303, 226, 320,
                                        210, 323, 237, 289, 11, 303, 303, 475, 475, 303, 18, 14, 475, 459, 303, 204, 44,
                                        39, 37, 303, 303, 531, 52, 334, 259, 260, 238, 303, 303, 233, 303, 303, 303,
                                        322, 308, 307, 285, 303, 303, 303, 11, 459, 303, 303, 459, 303, 475, 14, 459,
                                        303, 329, 303, 44, 39, 37, 233, 209, 303, 125, 303, 113, 303, 303, 303, 303, 99,
                                        303, 303, 303, 322, 308, 307, 285, 320, 210, 323, 329, 289, 303, 303, 303, 233,
                                        209, 303, 124, 303, 113, 303, 303, 303, 303, 99, 303, 303, 303, 303, 303, 303,
                                        303, 320, 210, 323, 329, 289, 303, 303, 303, 233, 209, 303, 121, 303, 113, 329,
                                        303, 303, 303, 99, 233, 209, 303, 127, 303, 113, 303, 320, 210, 323, 99, 289,
                                        303, 303, 226, 303, 303, 303, 320, 210, 323, 303, 289, 475, 475, 329, 303, 226,
                                        475, 459, 233, 209, 303, 128, 303, 113, 475, 475, 303, 34, 99, 475, 459, 204,
                                        303, 303, 303, 303, 320, 210, 323, 303, 289, 303, 204, 303, 303, 459, 303, 303,
                                        459, 329, 475, 303, 459, 332, 233, 209, 303, 126, 459, 113, 303, 459, 303, 475,
                                        99, 459, 303, 303, 44, 39, 37, 303, 320, 210, 323, 303, 289, 303, 309, 44, 39,
                                        37, 303, 333, 303, 322, 308, 307, 285, 303, 303, 226, 303, 303, 303, 303, 322,
                                        308, 307, 285, 475, 475, 32, 303, 303, 475, 459, 303, 303, 303, 164, 475, 475,
                                        303, 179, 303, 475, 459, 204, 303, 277, 303, 303, 41, 16, 327, 303, 303, 303,
                                        303, 303, 303, 303, 303, 459, 303, 303, 459, 190, 475, 303, 459, 303, 303, 174,
                                        459, 303, 303, 459, 303, 475, 303, 459, 303, 303, 44, 39, 37, 303, 303, 303,
                                        303, 303, 303, 303, 303, 303, 303, 303, 303, 303, 303, 322, 308, 307, 285,);
    static public $yy_lookahead = array(11, 12, 13, 45, 15, 16, 76, 18, 19, 20, 14, 53, 72, 17, 25, 85, 86, 87, 29, 30,
                                        31, 32, 82, 34, 75, 36, 77, 78, 39, 80, 100, 42, 43, 44, 45, 95, 47, 16, 49, 10,
                                        51, 52, 1, 54, 48, 11, 12, 13, 59, 15, 16, 22, 18, 19, 20, 26, 7, 8, 9, 25, 12,
                                        13, 33, 29, 16, 31, 32, 26, 34, 14, 36, 50, 17, 39, 33, 46, 42, 43, 44, 45, 97,
                                        47, 34, 49, 10, 51, 52, 53, 54, 36, 11, 12, 13, 59, 15, 16, 22, 18, 19, 20, 26,
                                        48, 54, 48, 25, 21, 1, 33, 29, 13, 31, 32, 16, 34, 94, 36, 96, 97, 39, 35, 46,
                                        42, 43, 44, 45, 71, 47, 76, 49, 75, 51, 52, 1, 54, 80, 11, 12, 13, 59, 15, 16,
                                        10, 18, 19, 20, 49, 92, 51, 22, 25, 54, 100, 101, 29, 1, 31, 32, 26, 34, 100,
                                        36, 14, 14, 39, 33, 1, 42, 43, 44, 45, 17, 47, 46, 49, 10, 51, 52, 1, 54, 53,
                                        11, 12, 13, 59, 15, 16, 10, 18, 19, 20, 26, 27, 45, 45, 25, 76, 14, 33, 29, 52,
                                        31, 32, 26, 34, 22, 36, 96, 97, 39, 33, 75, 42, 43, 44, 45, 80, 47, 22, 49, 100,
                                        51, 52, 1, 54, 36, 11, 12, 13, 59, 15, 16, 10, 18, 19, 20, 11, 12, 11, 12, 25,
                                        16, 46, 16, 29, 45, 31, 32, 26, 34, 13, 36, 52, 16, 39, 33, 60, 42, 43, 44, 45,
                                        93, 47, 75, 49, 77, 51, 52, 80, 54, 36, 11, 12, 13, 59, 15, 16, 50, 18, 19, 20,
                                        17, 48, 11, 12, 25, 12, 13, 16, 29, 16, 31, 32, 65, 34, 75, 36, 77, 70, 39, 80,
                                        26, 42, 43, 44, 45, 93, 47, 33, 49, 13, 51, 52, 35, 54, 37, 11, 12, 13, 59, 15,
                                        16, 50, 18, 19, 20, 36, 35, 54, 37, 25, 22, 104, 105, 29, 45, 31, 32, 48, 34,
                                        81, 36, 13, 53, 39, 16, 36, 42, 43, 44, 45, 54, 47, 45, 49, 46, 51, 52, 48, 54,
                                        52, 11, 12, 13, 59, 15, 16, 12, 18, 19, 20, 11, 12, 11, 12, 25, 16, 13, 16, 29,
                                        51, 31, 32, 54, 34, 65, 36, 35, 17, 39, 70, 36, 42, 43, 44, 45, 35, 47, 37, 49,
                                        36, 51, 52, 80, 54, 53, 11, 12, 13, 59, 15, 16, 50, 18, 19, 20, 45, 93, 54, 95,
                                        25, 98, 81, 52, 29, 105, 31, 32, 28, 34, 81, 36, 13, 93, 39, 72, 36, 42, 43, 44,
                                        45, 16, 47, 26, 49, 82, 51, 52, 48, 54, 33, 11, 12, 13, 59, 15, 16, 72, 18, 19,
                                        20, 1, 51, 100, 76, 25, 1, 82, 72, 29, 10, 31, 32, 54, 34, 10, 36, 17, 82, 39,
                                        95, 17, 42, 43, 44, 45, 26, 47, 100, 49, 1, 51, 65, 33, 54, 1, 36, 70, 71, 59,
                                        73, 74, 75, 64, 65, 66, 67, 80, 48, 70, 83, 84, 48, 91, 37, 88, 89, 90, 72, 92,
                                        98, 16, 28, 3, 4, 5, 6, 7, 82, 102, 103, 11, 12, 72, 72, 15, 36, 76, 18, 19, 20,
                                        16, 53, 82, 82, 25, 100, 16, 65, 29, 72, 31, 32, 70, 71, 53, 73, 74, 75, 72, 82,
                                        100, 66, 80, 53, 69, 83, 84, 23, 82, 72, 88, 89, 90, 76, 92, 1, 2, 16, 72, 82,
                                        16, 65, 85, 86, 87, 103, 70, 71, 82, 73, 74, 75, 16, 77, 96, 97, 80, 100, 10,
                                        83, 84, 95, 14, 72, 88, 89, 90, 76, 92, 14, 65, 51, 41, 82, 26, 70, 71, 13, 73,
                                        74, 75, 33, 16, 91, 36, 80, 10, 76, 83, 84, 98, 100, 34, 88, 89, 90, 48, 92, 45,
                                        93, 65, 95, 16, 34, 99, 70, 71, 4, 73, 74, 75, 100, 16, 101, 82, 80, 11, 12, 83,
                                        84, 93, 16, 72, 88, 89, 90, 76, 92, 4, 80, 93, 26, 82, 28, 99, 11, 12, 13, 33,
                                        15, 94, 80, 18, 19, 20, 93, 11, 12, 80, 25, 100, 16, 95, 29, 65, 31, 32, 72, 2,
                                        70, 71, 26, 73, 74, 75, 11, 12, 82, 33, 80, 16, 17, 83, 84, 79, 93, 8, 88, 89,
                                        90, 95, 92, 4, 59, 60, 68, 80, 80, 99, 11, 12, 13, 106, 15, 106, 106, 18, 19,
                                        20, 45, 106, 106, 48, 25, 50, 106, 52, 29, 65, 31, 32, 106, 106, 70, 71, 106,
                                        73, 74, 75, 106, 77, 106, 106, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90,
                                        106, 92, 106, 59, 60, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 11, 12,
                                        106, 106, 80, 16, 106, 83, 84, 106, 106, 106, 88, 89, 90, 26, 92, 28, 106, 65,
                                        106, 106, 33, 106, 70, 71, 106, 73, 74, 75, 1, 106, 106, 106, 80, 106, 106, 83,
                                        84, 10, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73,
                                        74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 38, 39, 40, 88, 89, 90, 65,
                                        92, 106, 106, 106, 70, 71, 106, 73, 74, 75, 55, 56, 57, 58, 80, 106, 106, 83,
                                        84, 106, 106, 106, 88, 89, 90, 106, 92, 106, 106, 65, 106, 106, 106, 106, 70,
                                        71, 106, 73, 74, 75, 1, 2, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89,
                                        90, 82, 92, 65, 85, 86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106,
                                        80, 100, 106, 83, 84, 38, 39, 40, 88, 89, 90, 65, 92, 106, 106, 106, 70, 71,
                                        106, 73, 74, 75, 55, 56, 57, 58, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89,
                                        90, 106, 92, 106, 106, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 1, 106,
                                        106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90, 82, 92, 65, 85, 86, 87,
                                        106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 100, 106, 83, 84, 38, 39,
                                        40, 88, 89, 90, 65, 92, 106, 106, 106, 70, 71, 106, 73, 74, 75, 55, 56, 57, 58,
                                        80, 60, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 106, 106, 65, 106, 106,
                                        106, 106, 70, 71, 106, 73, 74, 75, 1, 106, 106, 106, 80, 106, 106, 83, 84, 10,
                                        106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75,
                                        106, 106, 106, 106, 80, 106, 106, 83, 84, 38, 39, 40, 88, 89, 90, 65, 92, 106,
                                        106, 106, 70, 71, 106, 73, 74, 75, 55, 56, 57, 58, 80, 106, 106, 83, 84, 106,
                                        106, 106, 88, 89, 90, 106, 92, 106, 106, 65, 106, 106, 106, 106, 70, 71, 106,
                                        73, 74, 75, 1, 106, 106, 106, 80, 106, 106, 83, 84, 10, 106, 106, 88, 89, 90,
                                        106, 92, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106,
                                        80, 106, 106, 83, 84, 38, 39, 40, 88, 89, 90, 65, 92, 106, 106, 106, 70, 71,
                                        106, 73, 74, 75, 55, 56, 57, 58, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89,
                                        90, 106, 92, 106, 106, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 1, 106,
                                        106, 106, 80, 106, 106, 83, 84, 10, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106,
                                        106, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 38,
                                        39, 40, 88, 89, 90, 65, 92, 106, 106, 106, 70, 71, 106, 73, 74, 75, 55, 56, 57,
                                        58, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 106, 106, 65, 106,
                                        106, 106, 106, 70, 71, 106, 73, 74, 75, 1, 106, 106, 106, 80, 106, 106, 83, 84,
                                        106, 106, 106, 88, 89, 90, 106, 92, 65, 106, 106, 21, 106, 70, 71, 106, 73, 74,
                                        75, 106, 106, 106, 106, 80, 106, 106, 83, 84, 38, 39, 40, 88, 89, 90, 65, 92,
                                        106, 106, 106, 70, 71, 106, 73, 74, 75, 55, 56, 57, 58, 80, 106, 106, 83, 84,
                                        106, 106, 106, 88, 89, 90, 106, 92, 106, 106, 65, 106, 106, 106, 106, 70, 71,
                                        106, 73, 74, 75, 1, 106, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89,
                                        90, 82, 92, 65, 85, 86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106,
                                        80, 100, 106, 83, 84, 38, 39, 40, 88, 89, 90, 65, 92, 106, 106, 106, 70, 71,
                                        106, 73, 74, 75, 55, 56, 57, 58, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89,
                                        90, 106, 92, 106, 106, 65, 106, 106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
                                        106, 106, 106, 80, 72, 106, 83, 84, 76, 106, 106, 88, 89, 90, 82, 92, 65, 85,
                                        86, 87, 106, 70, 71, 106, 73, 74, 75, 106, 106, 106, 106, 80, 100, 106, 83, 84,
                                        38, 39, 40, 88, 89, 90, 65, 92, 106, 106, 106, 70, 71, 106, 73, 74, 75, 55, 56,
                                        57, 58, 80, 106, 106, 83, 84, 106, 106, 106, 88, 89, 90, 106, 92, 106, 1, 65,
                                        106, 106, 106, 106, 70, 71, 1, 73, 74, 75, 106, 1, 2, 106, 80, 106, 106, 83, 84,
                                        106, 106, 71, 88, 89, 90, 75, 92, 106, 106, 24, 80, 26, 106, 106, 37, 38, 39,
                                        40, 33, 89, 106, 106, 92, 38, 39, 40, 36, 106, 38, 39, 40, 106, 55, 56, 57, 58,
                                        106, 106, 48, 106, 55, 56, 57, 58, 106, 55, 56, 57, 58, 106, 106, 65, 106, 106,
                                        106, 106, 70, 71, 106, 73, 106, 75, 106, 106, 106, 106, 80, 106, 10, 106, 84,
                                        106, 106, 106, 88, 89, 90, 65, 92, 21, 1, 23, 70, 71, 26, 73, 106, 75, 106, 10,
                                        106, 33, 80, 35, 106, 37, 84, 106, 106, 2, 88, 89, 90, 45, 92, 26, 106, 106, 11,
                                        12, 106, 14, 33, 16, 17, 106, 1, 38, 39, 40, 106, 106, 62, 63, 64, 65, 66, 67,
                                        106, 106, 70, 106, 106, 106, 55, 56, 57, 58, 106, 106, 106, 26, 45, 106, 106,
                                        48, 106, 50, 33, 52, 106, 65, 106, 38, 39, 40, 70, 71, 106, 73, 106, 75, 106,
                                        106, 106, 106, 80, 106, 106, 106, 55, 56, 57, 58, 88, 89, 90, 65, 92, 106, 106,
                                        106, 70, 71, 106, 73, 106, 75, 106, 106, 106, 106, 80, 106, 106, 106, 106, 106,
                                        106, 106, 88, 89, 90, 65, 92, 106, 106, 106, 70, 71, 106, 73, 106, 75, 65, 106,
                                        106, 106, 80, 70, 71, 106, 73, 106, 75, 106, 88, 89, 90, 80, 92, 106, 106, 2,
                                        106, 106, 106, 88, 89, 90, 106, 92, 11, 12, 65, 106, 2, 16, 17, 70, 71, 106, 73,
                                        106, 75, 11, 12, 106, 14, 80, 16, 17, 1, 106, 106, 106, 106, 88, 89, 90, 106,
                                        92, 106, 1, 106, 106, 45, 106, 106, 48, 65, 50, 106, 52, 53, 70, 71, 106, 73,
                                        45, 75, 106, 48, 106, 50, 80, 52, 106, 106, 38, 39, 40, 106, 88, 89, 90, 106,
                                        92, 106, 37, 38, 39, 40, 106, 53, 106, 55, 56, 57, 58, 106, 106, 2, 106, 106,
                                        106, 106, 55, 56, 57, 58, 11, 12, 2, 106, 106, 16, 17, 106, 106, 106, 72, 11,
                                        12, 106, 76, 106, 16, 17, 1, 106, 82, 106, 106, 85, 86, 87, 106, 106, 106, 106,
                                        106, 106, 106, 106, 45, 106, 106, 48, 100, 50, 106, 52, 106, 106, 27, 45, 106,
                                        106, 48, 106, 50, 106, 52, 106, 106, 38, 39, 40, 106, 106, 106, 106, 106, 106,
                                        106, 106, 106, 106, 106, 106, 106, 106, 55, 56, 57, 58,);
    const YY_SHIFT_USE_DFLT = -43;
    const YY_SHIFT_MAX      = 238;
    static public $yy_shift_ofst = array(519, 349, 79, 79, 394, 349, 394, 79, -11, 34, -11, 214, 79, 79, 79, 79, 79, 79,
                                         169, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 304, 79, 259, 214, 79, 79, 79,
                                         124, 124, 439, 439, 439, 439, 439, 439, 1665, 1571, 1701, 1701, 1701, 1701,
                                         1701, 519, 1934, 1239, 1323, 1155, 1071, 987, 1858, 903, 1847, 819, 1563, 1407,
                                         1407, 1407, 1407, 1407, 1407, 1407, 1407, 1407, 1407, 1407, 1407, 1491, 1491,
                                         96, 664, 459, 221, 328, 41, 363, 718, 779, 645, 675, 675, 363, 41, 363, 370,
                                         41, 574, 164, 74, 29, 271, 131, 273, 176, -4, 49, 224, 224, 55, 464, 236, 153,
                                         274, 274, 463, 236, 488, 416, 493, 418, 105, 263, 105, 105, 105, 105, 105, 105,
                                         105, 105, 263, -43, 1830, 1817, 1683, 1906, 1917, 694, 48, 226, 359, 147, 354,
                                         274, 274, 274, 274, 274, 274, 199, 199, 274, 274, 199, 274, 296, 274, 274, 274,
                                         182, 199, 296, 274, 199, 274, 274, 274, 274, 307, 199, 199, 274, 307, 199, 296,
                                         296, 274, 696, 708, 105, 105, 696, 105, 105, 188, 263, 263, 263, 105, -43, -43,
                                         -43, -43, -43, 1576, 1644, 588, 289, 361, 126, 399, 195, 360, 84, 351, 21, -42,
                                         291, 277, 53, 308, 233, 148, 309, 560, 595, 576, 544, 476, 564, 510, 501, 410,
                                         636, 424, 524, 530, 561, 499, 504, 571, 604, 188, 606, 616, 598, 593, 626, 609,
                                         643,);
    const YY_REDUCE_USE_DFLT = -71;
    const YY_REDUCE_MAX      = 192;
    static public $yy_reduce_ofst   = array(1646, 426, 629, 575, 516, 482, 683, 545, 1416, 940, 966, 1024, 1192, 1050,
                                            1080, 1108, 1134, 1164, 912, 1218, 1360, 1470, 1500, 1444, 1248, 1386, 1332,
                                            1302, 1276, 996, 882, 828, 772, 856, 714, 744, 798, 1572, 1598, 1765, 1672,
                                            1724, 1735, 1698, 1801, 1425, 921, 1855, 1425, 1341, 497, 837, 438, -70,
                                            -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70,
                                            -70, -70, -70, -70, -70, -70, -70, -70, -70, 1516, 227, 531, 590, 54, 460,
                                            -51, 319, 625, 506, 384, -60, 187, 362, 219, 20, 445, 51, 119, 395, 395,
                                            323, 119, 322, 119, 110, 495, 546, 323, 110, 119, 532, 551, 486, 477, 110,
                                            421, 119, 461, 119, 135, 387, 110, 119, 119, 119, 119, 119, 119, 119, 119,
                                            498, 119, 577, 577, 577, 577, 577, 577, 601, 597, 577, 577, 592, 572, 572,
                                            572, 572, 572, 572, 586, 586, 572, 572, 586, 572, 589, 572, 572, 572, 635,
                                            586, 647, 572, 586, 572, 572, 572, 572, 567, 586, 586, 572, 622, 586, 608,
                                            646, 572, 552, 657, 59, 59, 552, 59, 59, 167, -17, -17, -17, 59, 258, 348,
                                            340, 212, 339,);
    static public $yyExpectedTokens = array(array(3, 4, 5, 6, 7, 11, 12, 15, 18, 19, 20, 25, 29, 31, 32,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 30, 31, 32, 34, 36, 39, 42,
                                                  43, 44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 53, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 30, 31, 32, 34, 36, 39, 42,
                                                  43, 44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 52, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 54, 59,),
                                            array(11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 31, 32, 34, 36, 39, 42, 43,
                                                  44, 45, 47, 49, 51, 54, 59,),
                                            array(1, 10, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 24, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 26, 33, 38, 39, 40, 55, 56, 57, 58,),
                                            array(3, 4, 5, 6, 7, 11, 12, 15, 18, 19, 20, 25, 29, 31, 32,),
                                            array(1, 27, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 10, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 21, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 10, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 10, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58, 60,),
                                            array(1, 37, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 2, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 53, 55, 56, 57, 58,),
                                            array(1, 10, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 37, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,),
                                            array(1, 38, 39, 40, 55, 56, 57, 58,), array(38, 39, 40, 55, 56, 57, 58,),
                                            array(38, 39, 40, 55, 56, 57, 58,), array(13, 16, 49, 51, 54,),
                                            array(4, 11, 12, 13, 15, 18, 19, 20, 25, 29, 31, 32, 59, 60,),
                                            array(1, 10, 17, 26, 33, 36, 48,), array(1, 10, 26, 33,),
                                            array(13, 16, 51, 54,), array(1, 26, 33,), array(13, 36, 54,),
                                            array(4, 11, 12, 13, 15, 18, 19, 20, 25, 29, 31, 32, 59, 60,),
                                            array(11, 12, 16, 26, 28, 33,), array(11, 12, 16, 26, 28, 33,),
                                            array(11, 12, 16, 26, 33,), array(11, 12, 16, 26, 33,), array(13, 36, 54,),
                                            array(1, 26, 33,), array(13, 36, 54,), array(17, 45, 52,),
                                            array(1, 26, 33,), array(1, 2,), array(1, 10, 26, 27, 33,),
                                            array(10, 22, 26, 33, 46,), array(10, 22, 26, 33, 46,),
                                            array(11, 12, 16, 50,), array(1, 10, 26, 33,), array(12, 13, 16, 54,),
                                            array(1, 10, 26, 33,), array(14, 17, 48,), array(7, 8, 9,),
                                            array(11, 12, 16,), array(11, 12, 16,), array(14, 17, 48,), array(1, 10,),
                                            array(13, 16,), array(1, 17,), array(26, 33,), array(26, 33,),
                                            array(17, 48,), array(13, 16,), array(1, 53,), array(26, 33,),
                                            array(1, 28,), array(13, 54,), array(1,), array(17,), array(1,), array(1,),
                                            array(1,), array(1,), array(1,), array(1,), array(1,), array(1,),
                                            array(17,), array(), array(2, 11, 12, 14, 16, 17, 45, 48, 50, 52,),
                                            array(2, 11, 12, 16, 17, 45, 48, 50, 52, 53,),
                                            array(2, 11, 12, 14, 16, 17, 45, 48, 50, 52,),
                                            array(2, 11, 12, 16, 17, 45, 48, 50, 52,),
                                            array(2, 11, 12, 16, 17, 45, 48, 50, 52,),
                                            array(11, 12, 16, 17, 45, 48, 50, 52,), array(12, 13, 16, 34, 54,),
                                            array(11, 12, 16, 50,), array(11, 12, 16,), array(14, 45, 52,),
                                            array(12, 36,), array(26, 33,), array(26, 33,), array(26, 33,),
                                            array(26, 33,), array(26, 33,), array(26, 33,), array(45, 52,),
                                            array(45, 52,), array(26, 33,), array(26, 33,), array(45, 52,),
                                            array(26, 33,), array(13, 54,), array(26, 33,), array(26, 33,),
                                            array(26, 33,), array(14, 22,), array(45, 52,), array(13, 54,),
                                            array(26, 33,), array(45, 52,), array(26, 33,), array(26, 33,),
                                            array(26, 33,), array(26, 33,), array(45, 52,), array(45, 52,),
                                            array(45, 52,), array(26, 33,), array(45, 52,), array(45, 52,),
                                            array(13, 54,), array(13, 54,), array(26, 33,), array(2,), array(8,),
                                            array(1,), array(1,), array(2,), array(1,), array(1,), array(36,),
                                            array(17,), array(17,), array(17,), array(1,), array(), array(), array(),
                                            array(), array(), array(1, 2, 36, 38, 39, 40, 48, 55, 56, 57, 58,),
                                            array(10, 21, 23, 26, 33, 35, 37, 45,), array(10, 14, 26, 33, 36, 48,),
                                            array(36, 45, 48, 53,), array(11, 12, 16, 50,), array(22, 46, 53,),
                                            array(28, 36, 48,), array(22, 46, 60,), array(35, 37,), array(21, 35,),
                                            array(35, 53,), array(16, 50,), array(45, 53,), array(35, 37,),
                                            array(35, 37,), array(36, 48,), array(22, 46,), array(36, 48,),
                                            array(14, 45,), array(36, 48,), array(51,), array(14,), array(16,),
                                            array(23,), array(37,), array(16,), array(53,), array(53,), array(51,),
                                            array(16,), array(16,), array(16,), array(16,), array(16,), array(36,),
                                            array(16,), array(41,), array(13,), array(36,), array(16,), array(10,),
                                            array(34,), array(45,), array(16,), array(34,), array(4,), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(), array(), array(),
                                            array(), array(), array(), array(), array(), array(),);
    static public $yy_default       = array(338, 515, 494, 494, 530, 530, 530, 494, 530, 530, 530, 530, 530, 530, 530,
                                            530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
                                            530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
                                            530, 396, 372, 359, 396, 362, 396, 335, 401, 530, 530, 530, 530, 530, 530,
                                            530, 530, 530, 530, 408, 418, 403, 493, 398, 401, 518, 407, 517, 377, 492,
                                            516, 423, 422, 530, 530, 434, 410, 530, 396, 530, 530, 396, 396, 396, 396,
                                            530, 396, 530, 506, 396, 386, 410, 424, 424, 459, 410, 530, 410, 449, 530,
                                            459, 459, 449, 410, 530, 390, 396, 374, 449, 530, 410, 396, 410, 530, 392,
                                            449, 417, 410, 421, 427, 426, 413, 425, 414, 503, 501, 448, 448, 448, 448,
                                            448, 448, 530, 461, 459, 475, 459, 366, 381, 370, 369, 376, 368, 487, 457,
                                            363, 364, 485, 360, 530, 358, 380, 375, 530, 484, 530, 356, 455, 383, 373,
                                            384, 382, 454, 456, 453, 379, 452, 486, 530, 530, 385, 495, 350, 393, 416,
                                            496, 387, 443, 459, 481, 507, 504, 391, 500, 500, 500, 459, 459, 434, 430,
                                            434, 434, 460, 424, 434, 424, 530, 530, 530, 530, 430, 530, 530, 434, 424,
                                            530, 430, 444, 530, 530, 530, 404, 530, 530, 530, 439, 530, 530, 530, 530,
                                            530, 530, 505, 530, 436, 530, 475, 530, 530, 530, 430, 530, 432, 342, 378,
                                            411, 480, 497, 475, 498, 464, 428, 462, 397, 437, 438, 446, 463, 447, 458,
                                            524, 479, 389, 351, 339, 340, 341, 344, 343, 345, 346, 347, 348, 349, 352,
                                            405, 353, 354, 394, 409, 365, 371, 395, 477, 478, 499, 502, 412, 465, 514,
                                            511, 415, 337, 450, 451, 483, 476, 491, 526, 513, 527, 488, 512, 482, 388,
                                            519, 520, 522, 529, 528, 525, 523, 510, 509, 436, 439, 490, 521, 489, 429,
                                            431, 474, 468, 433, 467, 435, 466, 508, 440, 469, 441, 471, 419, 420, 442,
                                            445, 472, 470, 473, 336,);
    const YYNOCODE      = 107;
    const YYSTACKDEPTH  = 500;
    const YYNSTATE      = 335;
    const YYNRULE       = 195;
    const YYERRORSYMBOL = 61;
    const YYERRSYMDT    = 'yy0';
    const YYFALLBACK    = 0;
    public static $yyFallback = array();

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } else if (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public $yyTraceFILE;
    public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array('$', 'VERT', 'COLON', 'PHP', 'TEXT', 'STRIPON', 'STRIPOFF', 'LITERALSTART',
                                'LITERALEND', 'LITERAL', 'RDEL', 'SIMPELOUTPUT', 'LDEL', 'DOLLARID', 'EQUAL',
                                'SIMPLETAG', 'ID', 'PTR', 'LDELMAKENOCACHE', 'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC',
                                'TO', 'STEP', 'LDELFOREACH', 'SPACE', 'AS', 'APTR', 'LDELSETFILTER',
                                'SMARTYBLOCKCHILDPARENT', 'CLOSETAG', 'LDELSLASH', 'ATTR', 'INTEGER', 'COMMA', 'OPENP',
                                'CLOSEP', 'MATH', 'UNIMATH', 'ISIN', 'QMARK', 'NOT', 'TYPECAST', 'HEX', 'DOT',
                                'INSTANCEOF', 'SINGLEQUOTESTRING', 'DOUBLECOLON', 'NAMESPACE', 'AT', 'HATCH', 'OPENB',
                                'CLOSEB', 'DOLLAR', 'LOGOP', 'SLOGOP', 'TLOGOP', 'SINGLECOND', 'QUOTE', 'BACKTICK',
                                'error', 'start', 'template', 'template_element', 'smartytag', 'literal',
                                'text_content', 'literal_elements', 'literal_element', 'tag', 'variable', 'attributes',
                                'value', 'expr', 'varindexed', 'modifierlist', 'statement', 'statements', 'foraction',
                                'varvar', 'modparameters', 'attribute', 'ternary', 'array', 'tlop', 'lop', 'scond',
                                'function', 'ns1', 'doublequoted_with_quotes', 'static_class_access', 'object',
                                'arrayindex', 'indexdef', 'varvarele', 'objectchain', 'objectelement', 'method',
                                'params', 'modifier', 'modparameter', 'arrayelements', 'arrayelement', 'doublequoted',
                                'doublequotedcontent',);

    public static $yyRuleName = array('start ::= template', 'template ::= template_element',
                                      'template ::= template template_element', 'template ::=',
                                      'template_element ::= smartytag', 'template_element ::= literal',
                                      'template_element ::= PHP', 'template_element ::= text_content',
                                      'text_content ::= TEXT', 'text_content ::= text_content TEXT',
                                      'template_element ::= STRIPON', 'template_element ::= STRIPOFF',
                                      'literal ::= LITERALSTART LITERALEND',
                                      'literal ::= LITERALSTART literal_elements LITERALEND',
                                      'literal_elements ::= literal_elements literal_element', 'literal_elements ::=',
                                      'literal_element ::= literal', 'literal_element ::= LITERAL',
                                      'smartytag ::= tag RDEL', 'smartytag ::= SIMPELOUTPUT', 'tag ::= LDEL variable',
                                      'tag ::= LDEL variable attributes', 'tag ::= LDEL value',
                                      'tag ::= LDEL value attributes', 'tag ::= LDEL expr',
                                      'tag ::= LDEL expr attributes', 'tag ::= LDEL DOLLARID EQUAL value',
                                      'tag ::= LDEL DOLLARID EQUAL expr', 'tag ::= LDEL DOLLARID EQUAL expr attributes',
                                      'tag ::= LDEL varindexed EQUAL expr attributes', 'smartytag ::= SIMPLETAG',
                                      'tag ::= LDEL ID attributes', 'tag ::= LDEL ID',
                                      'tag ::= LDEL ID modifierlist attributes', 'tag ::= LDEL ID PTR ID attributes',
                                      'tag ::= LDEL ID PTR ID modifierlist attributes',
                                      'tag ::= LDELMAKENOCACHE DOLLARID', 'tag ::= LDELIF expr',
                                      'tag ::= LDELIF expr attributes', 'tag ::= LDELIF statement',
                                      'tag ::= LDELIF statement attributes',
                                      'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',
                                      'foraction ::= EQUAL expr', 'foraction ::= INCDEC',
                                      'tag ::= LDELFOR statement TO expr attributes',
                                      'tag ::= LDELFOR statement TO expr STEP expr attributes',
                                      'tag ::= LDELFOREACH attributes',
                                      'tag ::= LDELFOREACH SPACE value AS varvar attributes',
                                      'tag ::= LDELFOREACH SPACE value AS varvar APTR varvar attributes',
                                      'tag ::= LDELFOREACH SPACE expr AS varvar attributes',
                                      'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',
                                      'tag ::= LDELSETFILTER ID modparameters',
                                      'tag ::= LDELSETFILTER ID modparameters modifierlist',
                                      'tag ::= LDEL SMARTYBLOCKCHILDPARENT', 'smartytag ::= CLOSETAG',
                                      'tag ::= LDELSLASH ID', 'tag ::= LDELSLASH ID modifierlist',
                                      'tag ::= LDELSLASH ID PTR ID', 'tag ::= LDELSLASH ID PTR ID modifierlist',
                                      'attributes ::= attributes attribute', 'attributes ::= attribute',
                                      'attributes ::=', 'attribute ::= SPACE ID EQUAL ID', 'attribute ::= ATTR expr',
                                      'attribute ::= ATTR value', 'attribute ::= SPACE ID', 'attribute ::= SPACE expr',
                                      'attribute ::= SPACE value', 'attribute ::= SPACE INTEGER EQUAL expr',
                                      'statements ::= statement', 'statements ::= statements COMMA statement',
                                      'statement ::= DOLLARID EQUAL INTEGER', 'statement ::= DOLLARID EQUAL expr',
                                      'statement ::= varindexed EQUAL expr', 'statement ::= OPENP statement CLOSEP',
                                      'expr ::= value', 'expr ::= ternary', 'expr ::= DOLLARID COLON ID',
                                      'expr ::= expr MATH value', 'expr ::= expr UNIMATH value', 'expr ::= array',
                                      'expr ::= expr modifierlist', 'expr ::= expr tlop value',
                                      'expr ::= expr lop expr', 'expr ::= expr scond', 'expr ::= expr ISIN array',
                                      'expr ::= expr ISIN value',
                                      'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',
                                      'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr', 'value ::= variable',
                                      'value ::= UNIMATH value', 'value ::= NOT value', 'value ::= TYPECAST value',
                                      'value ::= variable INCDEC', 'value ::= HEX', 'value ::= INTEGER',
                                      'value ::= INTEGER DOT INTEGER', 'value ::= INTEGER DOT', 'value ::= DOT INTEGER',
                                      'value ::= ID', 'value ::= function', 'value ::= OPENP expr CLOSEP',
                                      'value ::= variable INSTANCEOF ns1', 'value ::= variable INSTANCEOF variable',
                                      'value ::= SINGLEQUOTESTRING', 'value ::= doublequoted_with_quotes',
                                      'value ::= varindexed DOUBLECOLON static_class_access', 'value ::= smartytag',
                                      'value ::= value modifierlist', 'value ::= NAMESPACE',
                                      'value ::= ns1 DOUBLECOLON static_class_access', 'ns1 ::= ID',
                                      'ns1 ::= NAMESPACE', 'variable ::= DOLLARID', 'variable ::= varindexed',
                                      'variable ::= varvar AT ID', 'variable ::= object', 'variable ::= HATCH ID HATCH',
                                      'variable ::= HATCH ID HATCH arrayindex', 'variable ::= HATCH variable HATCH',
                                      'variable ::= HATCH variable HATCH arrayindex',
                                      'varindexed ::= DOLLARID arrayindex', 'varindexed ::= varvar arrayindex',
                                      'arrayindex ::= arrayindex indexdef', 'arrayindex ::=',
                                      'indexdef ::= DOT DOLLARID', 'indexdef ::= DOT varvar',
                                      'indexdef ::= DOT varvar AT ID', 'indexdef ::= DOT ID',
                                      'indexdef ::= DOT INTEGER', 'indexdef ::= DOT LDEL expr RDEL',
                                      'indexdef ::= OPENB ID CLOSEB', 'indexdef ::= OPENB ID DOT ID CLOSEB',
                                      'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',
                                      'indexdef ::= OPENB INTEGER CLOSEB', 'indexdef ::= OPENB DOLLARID CLOSEB',
                                      'indexdef ::= OPENB variable CLOSEB', 'indexdef ::= OPENB value CLOSEB',
                                      'indexdef ::= OPENB expr CLOSEB', 'indexdef ::= OPENB CLOSEB',
                                      'varvar ::= DOLLARID', 'varvar ::= DOLLAR', 'varvar ::= varvar varvarele',
                                      'varvarele ::= ID', 'varvarele ::= SIMPELOUTPUT', 'varvarele ::= LDEL expr RDEL',
                                      'object ::= varindexed objectchain', 'objectchain ::= objectelement',
                                      'objectchain ::= objectchain objectelement',
                                      'objectelement ::= PTR ID arrayindex', 'objectelement ::= PTR varvar arrayindex',
                                      'objectelement ::= PTR LDEL expr RDEL arrayindex',
                                      'objectelement ::= PTR ID LDEL expr RDEL arrayindex',
                                      'objectelement ::= PTR method', 'function ::= ns1 OPENP params CLOSEP',
                                      'method ::= ID OPENP params CLOSEP', 'method ::= DOLLARID OPENP params CLOSEP',
                                      'params ::= params COMMA expr', 'params ::= expr', 'params ::=',
                                      'modifierlist ::= modifierlist modifier modparameters',
                                      'modifierlist ::= modifier modparameters', 'modifier ::= VERT AT ID',
                                      'modifier ::= VERT ID', 'modparameters ::= modparameters modparameter',
                                      'modparameters ::=', 'modparameter ::= COLON value',
                                      'modparameter ::= COLON array', 'static_class_access ::= method',
                                      'static_class_access ::= method objectchain', 'static_class_access ::= ID',
                                      'static_class_access ::= DOLLARID arrayindex',
                                      'static_class_access ::= DOLLARID arrayindex objectchain', 'lop ::= LOGOP',
                                      'lop ::= SLOGOP', 'tlop ::= TLOGOP', 'scond ::= SINGLECOND',
                                      'array ::= OPENB arrayelements CLOSEB', 'arrayelements ::= arrayelement',
                                      'arrayelements ::= arrayelements COMMA arrayelement', 'arrayelements ::=',
                                      'arrayelement ::= value APTR expr', 'arrayelement ::= ID APTR expr',
                                      'arrayelement ::= expr', 'doublequoted_with_quotes ::= QUOTE QUOTE',
                                      'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',
                                      'doublequoted ::= doublequoted doublequotedcontent',
                                      'doublequoted ::= doublequotedcontent',
                                      'doublequotedcontent ::= BACKTICK variable BACKTICK',
                                      'doublequotedcontent ::= BACKTICK expr BACKTICK',
                                      'doublequotedcontent ::= DOLLARID', 'doublequotedcontent ::= LDEL variable RDEL',
                                      'doublequotedcontent ::= LDEL expr RDEL', 'doublequotedcontent ::= smartytag',
                                      'doublequotedcontent ::= TEXT',);

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[ $tokenType ];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (empty($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                   $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[ $yytos->major ] . "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        static $res3 = array();
        static $res4 = array();
        $state = $this->yystack[ $this->yyidx ]->stateno;
        $expected = self::$yyExpectedTokens[ $state ];
        if (isset($res3[ $state ][ $token ])) {
            if ($res3[ $state ][ $token ]) {
                return $expected;
            }
        } else {
            if ($res3[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return $expected;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][1];
                    $nextstate = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno,
                                                              self::$yyRuleInfo[ $yyruleno ][0]);
                    if (isset(self::$yyExpectedTokens[ $nextstate ])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[ $nextstate ]);
                        if (isset($res4[ $nextstate ][ $token ])) {
                            if ($res4[ $nextstate ][ $token ]) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        } else {
                            if ($res4[ $nextstate ][ $token ] =
                                in_array($token, self::$yyExpectedTokens[ $nextstate ], true)) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][0];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        static $res = array();
        static $res2 = array();
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[ $this->yyidx ]->stateno;
        if (isset($res[ $state ][ $token ])) {
            if ($res[ $state ][ $token ]) {
                return true;
            }
        } else {
            if ($res[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return true;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][1];
                    $nextstate = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno,
                                                              self::$yyRuleInfo[ $yyruleno ][0]);
                    if (isset($res2[ $nextstate ][ $token ])) {
                        if ($res2[ $nextstate ][ $token ]) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    } else {
                        if ($res2[ $nextstate ][ $token ] = (isset(self::$yyExpectedTokens[ $nextstate ]) &&
                                                             in_array($token,
                                                                      self::$yyExpectedTokens[ $nextstate ],
                                                                      true))) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][0];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[ $this->yyidx ]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[ $stateno ])) {
            // no shift actions
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_shift_ofst[ $stateno ];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[ $i ] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback) &&
                ($iFallback = self::$yyFallback[ $iLookAhead ]) != 0) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE,
                           $this->yyTracePrompt . "FALLBACK " . $this->yyTokenName[ $iLookAhead ] . " => " .
                           $this->yyTokenName[ $iFallback ] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[ $stateno ])) {
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_reduce_ofst[ $stateno ];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[ $i ] != $iLookAhead) {
            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 207 "../smarty/lexer/smarty_internal_templateparser.y"

            $this->internalError = true;
            $this->compiler->trigger_template_error("Stack overflow in template parser");

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        $this->yystack[] = $yytos;
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE,
                    "%sShift %d\n",
                    $this->yyTracePrompt,
                    $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf($this->yyTraceFILE,
                        " %s",
                        $this->yyTokenName[ $this->yystack[ $i ]->major ]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    public static $yyRuleInfo = array(array(0 => 62, 1 => 1), array(0 => 63, 1 => 1), array(0 => 63, 1 => 2),
                                      array(0 => 63, 1 => 0), array(0 => 64, 1 => 1), array(0 => 64, 1 => 1),
                                      array(0 => 64, 1 => 1), array(0 => 64, 1 => 1), array(0 => 67, 1 => 1),
                                      array(0 => 67, 1 => 2), array(0 => 64, 1 => 1), array(0 => 64, 1 => 1),
                                      array(0 => 66, 1 => 2), array(0 => 66, 1 => 3), array(0 => 68, 1 => 2),
                                      array(0 => 68, 1 => 0), array(0 => 69, 1 => 1), array(0 => 69, 1 => 1),
                                      array(0 => 65, 1 => 2), array(0 => 65, 1 => 1), array(0 => 70, 1 => 2),
                                      array(0 => 70, 1 => 3), array(0 => 70, 1 => 2), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 2), array(0 => 70, 1 => 3), array(0 => 70, 1 => 4),
                                      array(0 => 70, 1 => 4), array(0 => 70, 1 => 5), array(0 => 70, 1 => 5),
                                      array(0 => 65, 1 => 1), array(0 => 70, 1 => 3), array(0 => 70, 1 => 2),
                                      array(0 => 70, 1 => 4), array(0 => 70, 1 => 5), array(0 => 70, 1 => 6),
                                      array(0 => 70, 1 => 2), array(0 => 70, 1 => 2), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 2), array(0 => 70, 1 => 3), array(0 => 70, 1 => 8),
                                      array(0 => 79, 1 => 2), array(0 => 79, 1 => 1), array(0 => 70, 1 => 5),
                                      array(0 => 70, 1 => 7), array(0 => 70, 1 => 2), array(0 => 70, 1 => 6),
                                      array(0 => 70, 1 => 8), array(0 => 70, 1 => 6), array(0 => 70, 1 => 8),
                                      array(0 => 70, 1 => 3), array(0 => 70, 1 => 4), array(0 => 70, 1 => 2),
                                      array(0 => 65, 1 => 1), array(0 => 70, 1 => 2), array(0 => 70, 1 => 3),
                                      array(0 => 70, 1 => 4), array(0 => 70, 1 => 5), array(0 => 72, 1 => 2),
                                      array(0 => 72, 1 => 1), array(0 => 72, 1 => 0), array(0 => 82, 1 => 4),
                                      array(0 => 82, 1 => 2), array(0 => 82, 1 => 2), array(0 => 82, 1 => 2),
                                      array(0 => 82, 1 => 2), array(0 => 82, 1 => 2), array(0 => 82, 1 => 4),
                                      array(0 => 78, 1 => 1), array(0 => 78, 1 => 3), array(0 => 77, 1 => 3),
                                      array(0 => 77, 1 => 3), array(0 => 77, 1 => 3), array(0 => 77, 1 => 3),
                                      array(0 => 74, 1 => 1), array(0 => 74, 1 => 1), array(0 => 74, 1 => 3),
                                      array(0 => 74, 1 => 3), array(0 => 74, 1 => 3), array(0 => 74, 1 => 1),
                                      array(0 => 74, 1 => 2), array(0 => 74, 1 => 3), array(0 => 74, 1 => 3),
                                      array(0 => 74, 1 => 2), array(0 => 74, 1 => 3), array(0 => 74, 1 => 3),
                                      array(0 => 83, 1 => 7), array(0 => 83, 1 => 7), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 2), array(0 => 73, 1 => 2),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 1), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 3), array(0 => 73, 1 => 2), array(0 => 73, 1 => 2),
                                      array(0 => 73, 1 => 1), array(0 => 73, 1 => 1), array(0 => 73, 1 => 3),
                                      array(0 => 73, 1 => 3), array(0 => 73, 1 => 3), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 1), array(0 => 73, 1 => 3), array(0 => 73, 1 => 1),
                                      array(0 => 73, 1 => 2), array(0 => 73, 1 => 1), array(0 => 73, 1 => 3),
                                      array(0 => 89, 1 => 1), array(0 => 89, 1 => 1), array(0 => 71, 1 => 1),
                                      array(0 => 71, 1 => 1), array(0 => 71, 1 => 3), array(0 => 71, 1 => 1),
                                      array(0 => 71, 1 => 3), array(0 => 71, 1 => 4), array(0 => 71, 1 => 3),
                                      array(0 => 71, 1 => 4), array(0 => 75, 1 => 2), array(0 => 75, 1 => 2),
                                      array(0 => 93, 1 => 2), array(0 => 93, 1 => 0), array(0 => 94, 1 => 2),
                                      array(0 => 94, 1 => 2), array(0 => 94, 1 => 4), array(0 => 94, 1 => 2),
                                      array(0 => 94, 1 => 2), array(0 => 94, 1 => 4), array(0 => 94, 1 => 3),
                                      array(0 => 94, 1 => 5), array(0 => 94, 1 => 3), array(0 => 94, 1 => 3),
                                      array(0 => 94, 1 => 3), array(0 => 94, 1 => 3), array(0 => 94, 1 => 3),
                                      array(0 => 94, 1 => 3), array(0 => 94, 1 => 2), array(0 => 80, 1 => 1),
                                      array(0 => 80, 1 => 1), array(0 => 80, 1 => 2), array(0 => 95, 1 => 1),
                                      array(0 => 95, 1 => 1), array(0 => 95, 1 => 3), array(0 => 92, 1 => 2),
                                      array(0 => 96, 1 => 1), array(0 => 96, 1 => 2), array(0 => 97, 1 => 3),
                                      array(0 => 97, 1 => 3), array(0 => 97, 1 => 5), array(0 => 97, 1 => 6),
                                      array(0 => 97, 1 => 2), array(0 => 88, 1 => 4), array(0 => 98, 1 => 4),
                                      array(0 => 98, 1 => 4), array(0 => 99, 1 => 3), array(0 => 99, 1 => 1),
                                      array(0 => 99, 1 => 0), array(0 => 76, 1 => 3), array(0 => 76, 1 => 2),
                                      array(0 => 100, 1 => 3), array(0 => 100, 1 => 2), array(0 => 81, 1 => 2),
                                      array(0 => 81, 1 => 0), array(0 => 101, 1 => 2), array(0 => 101, 1 => 2),
                                      array(0 => 91, 1 => 1), array(0 => 91, 1 => 2), array(0 => 91, 1 => 1),
                                      array(0 => 91, 1 => 2), array(0 => 91, 1 => 3), array(0 => 86, 1 => 1),
                                      array(0 => 86, 1 => 1), array(0 => 85, 1 => 1), array(0 => 87, 1 => 1),
                                      array(0 => 84, 1 => 3), array(0 => 102, 1 => 1), array(0 => 102, 1 => 3),
                                      array(0 => 102, 1 => 0), array(0 => 103, 1 => 3), array(0 => 103, 1 => 3),
                                      array(0 => 103, 1 => 1), array(0 => 90, 1 => 2), array(0 => 90, 1 => 3),
                                      array(0 => 104, 1 => 2), array(0 => 104, 1 => 1), array(0 => 105, 1 => 3),
                                      array(0 => 105, 1 => 3), array(0 => 105, 1 => 1), array(0 => 105, 1 => 3),
                                      array(0 => 105, 1 => 3), array(0 => 105, 1 => 1), array(0 => 105, 1 => 1),);

    public static $yyReduceMap = array(0 => 0, 1 => 1, 2 => 2, 4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 16 => 8, 17 => 8,
                                       43 => 8, 66 => 8, 67 => 8, 75 => 8, 76 => 8, 80 => 8, 89 => 8, 94 => 8, 95 => 8,
                                       100 => 8, 104 => 8, 105 => 8, 109 => 8, 111 => 8, 116 => 8, 178 => 8, 183 => 8,
                                       9 => 9, 10 => 10, 11 => 11, 12 => 12, 15 => 12, 13 => 13, 74 => 13, 14 => 14,
                                       90 => 14, 92 => 14, 93 => 14, 123 => 14, 18 => 18, 19 => 19, 20 => 20, 22 => 20,
                                       24 => 20, 21 => 21, 23 => 21, 25 => 21, 26 => 26, 27 => 26, 28 => 28, 29 => 29,
                                       30 => 30, 31 => 31, 32 => 32, 33 => 33, 34 => 34, 35 => 35, 36 => 36, 37 => 37,
                                       38 => 38, 40 => 38, 39 => 39, 41 => 41, 42 => 42, 44 => 44, 45 => 45, 46 => 46,
                                       47 => 47, 49 => 47, 48 => 48, 50 => 48, 51 => 51, 52 => 52, 53 => 53, 54 => 54,
                                       55 => 55, 56 => 56, 57 => 57, 58 => 58, 59 => 59, 60 => 60, 69 => 60, 158 => 60,
                                       162 => 60, 166 => 60, 167 => 60, 61 => 61, 159 => 61, 165 => 61, 62 => 62,
                                       63 => 63, 64 => 63, 65 => 65, 143 => 65, 68 => 68, 70 => 70, 71 => 71, 72 => 71,
                                       73 => 73, 77 => 77, 78 => 78, 79 => 78, 81 => 81, 108 => 81, 82 => 82, 83 => 83,
                                       84 => 84, 85 => 85, 86 => 86, 87 => 87, 88 => 88, 91 => 91, 96 => 96, 97 => 97,
                                       98 => 98, 99 => 99, 101 => 101, 102 => 102, 103 => 102, 106 => 106, 107 => 107,
                                       110 => 110, 112 => 112, 113 => 113, 114 => 114, 115 => 115, 117 => 117,
                                       118 => 118, 119 => 119, 120 => 120, 121 => 121, 122 => 122, 124 => 124,
                                       180 => 124, 125 => 125, 126 => 126, 127 => 127, 128 => 128, 129 => 129,
                                       130 => 130, 138 => 130, 131 => 131, 132 => 132, 133 => 133, 134 => 133,
                                       136 => 133, 137 => 133, 135 => 135, 139 => 139, 140 => 140, 141 => 141,
                                       184 => 141, 142 => 142, 144 => 144, 145 => 145, 146 => 146, 147 => 147,
                                       148 => 148, 149 => 149, 150 => 150, 151 => 151, 152 => 152, 153 => 153,
                                       154 => 154, 155 => 155, 156 => 156, 157 => 157, 160 => 160, 161 => 161,
                                       163 => 163, 164 => 164, 168 => 168, 169 => 169, 170 => 170, 171 => 171,
                                       172 => 172, 173 => 173, 174 => 174, 175 => 175, 176 => 176, 177 => 177,
                                       179 => 179, 181 => 181, 182 => 182, 185 => 185, 186 => 186, 187 => 187,
                                       188 => 188, 189 => 188, 191 => 188, 190 => 190, 192 => 192, 193 => 193,
                                       194 => 194,);

    #line 218 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r0()
    {
        $this->root_buffer->prepend_array($this, $this->template_prefix);
        $this->root_buffer->append_array($this, $this->template_postfix);
        $this->_retvalue = $this->root_buffer->to_smarty_php($this);
    }

    #line 228 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r1()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 235 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r2()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            // because of possible code injection
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 249 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r4()
    {
        if ($this->compiler->has_code) {
            $this->_retvalue = $this->mergePrefixCode($this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue = null;
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

    #line 260 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r5()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Text($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 264 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r6()
    {
        $code = $this->compiler->compileTag('private_php',
                                            array(array('code' => $this->yystack[ $this->yyidx + 0 ]->minor),
                                                  array('type' => $this->lex->phpType)),
                                            array());
        if ($this->compiler->has_code && !empty($code)) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->_retvalue =
                new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp . $code, true));
        } else {
            $this->_retvalue = null;
        }
    }

    #line 275 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r7()
    {
        $this->_retvalue = $this->compiler->processText($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 279 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r8()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 283 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r9()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 288 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r10()
    {
        $this->strip = true;
    }

    #line 292 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r11()
    {
        $this->strip = false;
    }

    #line 297 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r12()
    {
        $this->_retvalue = '';
    }

    #line 301 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r13()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 305 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r14()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 321 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r18()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 327 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r19()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
                 ' $');
        if (preg_match('/^(.*)(\s+nocache)$/', $var, $match)) {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array('nocache'),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $match[1] .
                                                                                                             '\'')));
        } else {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $var .
                                                                                                             '\'')));
        }
    }

    #line 337 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r20()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                       array(),
                                                       array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 341 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r21()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('value' => $this->yystack[ $this->yyidx + -1 ]->minor));
    }

    #line 364 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r26()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array(array('value' => $this->yystack[ $this->yyidx +
                                                                                              0 ]->minor),
                                                             array('var' => '\'' . substr($this->yystack[ $this->yyidx +
                                                                                                          -2 ]->minor,
                                                                                          1) . '\'')));
    }

    #line 372 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r28()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          -1 ]->minor),
                                                                         array('var' => '\'' .
                                                                                        substr($this->yystack[ $this->yyidx +
                                                                                                               -3 ]->minor,
                                                                                               1) . '\'')),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 376 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          -1 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor['var'])),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor),
                                                       array('smarty_internal_index' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor['smarty_internal_index']));
    }

    #line 381 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r30()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length));
        if ($tag == 'strip') {
            $this->strip = true;
            $this->_retvalue = null;;
        } else {
            if (defined($tag)) {
                if ($this->security) {
                    $this->security->isTrustedConstant($tag, $this->compiler);
                }
                $this->_retvalue =
                    $this->compiler->compileTag('private_print_expression', array(), array('value' => $tag));
            } else {
                if (preg_match('/^(.*)(\s+nocache)$/', $tag, $match)) {
                    $this->_retvalue = $this->compiler->compileTag($match[1], array("'nocache'"));
                } else {
                    $this->_retvalue = $this->compiler->compileTag($tag, array());
                }
            }
        }
    }

    #line 403 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r31()
    {
        if (defined($this->yystack[ $this->yyidx + -1 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -1 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value' => $this->yystack[ $this->yyidx +
                                                                                            -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 413 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r32()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor, array());
        }
    }

    #line 426 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r33()
    {
        if (defined($this->yystack[ $this->yyidx + -2 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -2 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value' => $this->yystack[ $this->yyidx + -2 ]->minor,
                                                                 'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        }
    }

    #line 438 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r34()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor));
    }

    #line 443 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r35()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -4 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor,
                                                             'object_method' => $this->yystack[ $this->yyidx +
                                                                                                -2 ]->minor));
    }

    #line 448 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r36()
    {
        $this->_retvalue = $this->compiler->compileTag('make_nocache',
                                                       array(array('var' => '\'' . substr($this->yystack[ $this->yyidx +
                                                                                                          0 ]->minor,
                                                                                          1) . '\'')));
    }

    #line 453 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r37()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 458 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r38()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -2 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor));
    }

    #line 463 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r39()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 474 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r41()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -6 ]->minor),
                                                                         array('ifexp' => $this->yystack[ $this->yyidx +
                                                                                                          -4 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -2 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       1);
    }

    #line 478 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r42()
    {
        $this->_retvalue = '=' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 486 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r44()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -3 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -1 ]->minor))),
                                                       0);
    }

    #line 490 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r45()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -5 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -3 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       0);
    }

    #line 495 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 500 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -3 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))));
    }

    #line 504 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -5 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor),
                                                                         array('key' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor))));
    }

    #line 517 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r51()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                        -1 ]->minor),
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  0 ]->minor))));
    }

    #line 521 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r52()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array_merge(array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                                    -2 ]->minor),
                                                                                                              $this->yystack[ $this->yyidx +
                                                                                                                              -1 ]->minor)),
                                                                                            $this->yystack[ $this->yyidx +
                                                                                                            0 ]->minor)));
    }

    #line 526 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r53()
    {
        $j = strrpos($this->yystack[ $this->yyidx + 0 ]->minor, '.');
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ $j + 1 ] == 'c') {
            // {$smarty.block.child}
            $this->_retvalue = $this->compiler->compileTag('block_child', array());;
        } else {
            // {$smarty.block.parent}
            $this->_retvalue = $this->compiler->compileTag('block_parent', array());;
        }
    }

    #line 539 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r54()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
                 ' /');
        if ($tag == 'strip') {
            $this->strip = false;
            $this->_retvalue = null;
        } else {
            $this->_retvalue = $this->compiler->compileTag($tag . 'close', array());
        }
    }

    #line 548 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r55()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor . 'close', array());
    }

    #line 552 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r56()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor . 'close',
                                                       array(),
                                                       array('modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 557 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r57()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 561 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r58()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor,
                                                             'modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 569 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r59()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
        $this->_retvalue[] = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 575 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r60()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 580 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r61()
    {
        $this->_retvalue = array();
    }

    #line 585 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r62()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => '\'' . $this->yystack[ $this->yyidx + 0 ]->minor .
                                                                    '\'');
        }
    }

    #line 596 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r63()
    {
        $this->_retvalue =
            array(trim($this->yystack[ $this->yyidx + -1 ]->minor, " =\n\r\t") => $this->yystack[ $this->yyidx +
                                                                                                  0 ]->minor);
    }

    #line 604 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r65()
    {
        $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
    }

    #line 616 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r68()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 629 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r70()
    {
        $this->yystack[ $this->yyidx + -2 ]->minor[] = $this->yystack[ $this->yyidx + 0 ]->minor;
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor;
    }

    #line 634 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r71()
    {
        $this->_retvalue = array('var' => '\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '\'',
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 641 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r73()
    {
        $this->_retvalue = array('var' => $this->yystack[ $this->yyidx + -2 ]->minor,
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 665 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r77()
    {
        $this->_retvalue =
            '$_smarty_tpl->getStreamVariable(\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '://' .
            $this->yystack[ $this->yyidx + 0 ]->minor . '\')';
    }

    #line 670 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r78()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . trim($this->yystack[ $this->yyidx + -1 ]->minor) .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 684 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r81()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier',
                                                       array(),
                                                       array('value' => $this->yystack[ $this->yyidx + -1 ]->minor,
                                                             'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 690 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r82()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -1 ]->minor['pre'] . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + -1 ]->minor['op'] . $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 694 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r83()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 698 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r84()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 702 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r85()
    {
        $this->_retvalue =
            'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor .
            ')';
    }

    #line 706 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r86()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',(array)' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 714 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r87()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->compiler->compileVariable('\'' .
                                                                                                                 substr($this->yystack[ $this->yyidx +
                                                                                                                                        -2 ]->minor,
                                                                                                                        1) .
                                                                                                                 '\'') .
                           ' : ' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 718 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r88()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->yystack[ $this->yyidx + -2 ]->minor . ' : ' .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 733 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r91()
    {
        $this->_retvalue = '!' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 754 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r96()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 758 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r97()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.';
    }

    #line 762 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r98()
    {
        $this->_retvalue = '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 767 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r99()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
        }
    }

    #line 784 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r101()
    {
        $this->_retvalue = "(" . $this->yystack[ $this->yyidx + -1 ]->minor . ")";
    }

    #line 788 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r102()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 806 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r106()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        if ($this->yystack[ $this->yyidx + -2 ]->minor['var'] == '\'smarty\'') {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileTag('private_special_variable',
                                                                          array(),
                                                                          $this->yystack[ $this->yyidx +
                                                                                          -2 ]->minor['smarty_internal_index']) .
                                              ';?>');
        } else {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileVariable($this->yystack[ $this->yyidx +
                                                                                               -2 ]->minor['var']) .
                                              $this->yystack[ $this->yyidx + -2 ]->minor['smarty_internal_index'] .
                                              ';?>');
        }
        $this->_retvalue = $prefixVar . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[0] .
                           $this->yystack[ $this->yyidx + 0 ]->minor[1];
    }

    #line 817 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r107()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, "<?php $prefixVar" . '=ob_get_clean();?>'));
        $this->_retvalue = $prefixVar;
    }

    #line 834 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r110()
    {
        if (!in_array(strtolower($this->yystack[ $this->yyidx + -2 ]->minor), array('self', 'parent')) &&
            (!$this->security || $this->security->isTrustedStaticClassAccess($this->yystack[ $this->yyidx + -2 ]->minor,
                                                                             $this->yystack[ $this->yyidx + 0 ]->minor,
                                                                             $this->compiler))) {
            if (isset($this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ])) {
                $this->_retvalue =
                    $this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ] . '::' .
                    $this->yystack[ $this->yyidx + 0 ]->minor[0] . $this->yystack[ $this->yyidx + 0 ]->minor[1];
            } else {
                $this->_retvalue =
                    $this->yystack[ $this->yyidx + -2 ]->minor . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[0] .
                    $this->yystack[ $this->yyidx + 0 ]->minor[1];
            }
        } else {
            $this->compiler->trigger_template_error("static class '" . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                    "' is undefined or not allowed by security setting");
        }
    }

    #line 853 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r112()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 864 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r113()
    {
        $this->_retvalue =
            $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'');
    }

    #line 867 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r114()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor['var'] == '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable',
                                                      array(),
                                                      $this->yystack[ $this->yyidx +
                                                                      0 ]->minor['smarty_internal_index']);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current
            $this->last_variable = $this->yystack[ $this->yyidx + 0 ]->minor['var'];
            $this->last_index = $this->yystack[ $this->yyidx + 0 ]->minor['smarty_internal_index'];
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor['var']) .
                               $this->yystack[ $this->yyidx + 0 ]->minor['smarty_internal_index'];
        }
    }

    #line 880 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r115()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[ $this->yyidx + -2 ]->minor . ']->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 890 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r117()
    {
        $this->_retvalue =
            $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + -1 ]->minor . "'");
    }

    #line 894 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r118()
    {
        $this->_retvalue = '(is_array($tmp = ' .
                           $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                                  "'") . ') ? $tmp' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ' :null)';
    }

    #line 898 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r119()
    {
        $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 902 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r120()
    {
        $this->_retvalue =
            '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -2 ]->minor) .
            ') ? $tmp' . $this->yystack[ $this->yyidx + 0 ]->minor . ' : null)';
    }

    #line 906 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r121()
    {
        $this->_retvalue = array('var' => '\'' . substr($this->yystack[ $this->yyidx + -1 ]->minor, 1) . '\'',
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 909 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r122()
    {
        $this->_retvalue = array('var' => $this->yystack[ $this->yyidx + -1 ]->minor,
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 922 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r124()
    {
        return;
    }

    #line 928 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r125()
    {
        $this->_retvalue =
            '[' . $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'') .
            ']';
    }

    #line 931 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r126()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor) . ']';
    }

    #line 935 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r127()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -2 ]->minor) . '->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 939 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r128()
    {
        $this->_retvalue = "['" . $this->yystack[ $this->yyidx + 0 ]->minor . "']";
    }

    #line 943 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r129()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 948 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r130()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 953 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r131()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor .
                                                             '\'][\'index\']') . ']';
    }

    #line 957 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r132()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -3 ]->minor . '\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor . '\']') . ']';
    }

    #line 960 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r133()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 966 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r135()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable('\'' .
                                                                  substr($this->yystack[ $this->yyidx + -1 ]->minor,
                                                                         1) . '\'') . ']';;
    }

    #line 982 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r139()
    {
        $this->_retvalue = '[]';
    }

    #line 992 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r140()
    {
        $this->_retvalue = '\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'';
    }

    #line 996 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r141()
    {
        $this->_retvalue = "''";
    }

    #line 1001 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r142()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1009 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r144()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
                 ' $');
        $this->_retvalue = $this->compiler->compileVariable('\'' . $var . '\'');
    }

    #line 1015 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r145()
    {
        $this->_retvalue = '(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 1022 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r146()
    {
        if ($this->yystack[ $this->yyidx + -1 ]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable',
                                                           array(),
                                                           $this->yystack[ $this->yyidx +
                                                                           -1 ]->minor['smarty_internal_index']) .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor['var']) .
                               $this->yystack[ $this->yyidx + -1 ]->minor['smarty_internal_index'] .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        }
    }

    #line 1031 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r147()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1036 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r148()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1041 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r149()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -1 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue =
            '->' . $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1048 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r150()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor) .
                           $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1055 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r151()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{' . $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1062 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r152()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{\'' . $this->yystack[ $this->yyidx + -4 ]->minor . '\'.' . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1070 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r153()
    {
        $this->_retvalue = '->' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1078 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r154()
    {
        $this->_retvalue = $this->compiler->compilePHPFunctionCall($this->yystack[ $this->yyidx + -3 ]->minor,
                                                                   $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1086 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r155()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -3 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[ $this->yyidx + -3 ]->minor . "(" .
                           implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ")";
    }

    #line 1093 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r156()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $this->compiler->appendPrefixCode("<?php $prefixVar" . '=' . $this->compiler->compileVariable('\'' .
                                                                                                      substr($this->yystack[ $this->yyidx +
                                                                                                                             -3 ]->minor,
                                                                                                             1) .
                                                                                                      '\'') . ';?>');
        $this->_retvalue = $prefixVar . '(' . implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ')';
    }

    #line 1104 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r157()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -2 ]->minor, array($this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1121 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r160()
    {
        $this->_retvalue = array_merge($this->yystack[ $this->yyidx + -2 ]->minor,
                                       array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor,
                                                         $this->yystack[ $this->yyidx + 0 ]->minor)));
    }

    #line 1125 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r161()
    {
        $this->_retvalue =
            array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1133 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r163()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1141 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r164()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1160 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r168()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '', 'method');
    }

    #line 1165 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r169()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'method');
    }

    #line 1170 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r170()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '');
    }

    #line 1175 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r171()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'property');
    }

    #line 1180 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r172()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + -2 ]->minor,
                                 $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor,
                                 'property');
    }

    #line 1186 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r173()
    {
        $this->_retvalue = ' ' . trim($this->yystack[ $this->yyidx + 0 ]->minor) . ' ';
    }

    #line 1190 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r174()
    {
        static $lops =
            array('eq' => ' == ', 'ne' => ' != ', 'neq' => ' != ', 'gt' => ' > ', 'ge' => ' >= ', 'gte' => ' >= ',
                  'lt' => ' < ', 'le' => ' <= ', 'lte' => ' <= ', 'mod' => ' % ', 'and' => ' && ', 'or' => ' || ',
                  'xor' => ' xor ',);
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $lops[ $op ];
    }

    #line 1209 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r175()
    {
        static $tlops =
            array('isdivby' => array('op' => ' % ', 'pre' => '!('), 'isnotdivby' => array('op' => ' % ', 'pre' => '('),
                  'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),
                  'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),
                  'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),
                  'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),);
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $tlops[ $op ];
    }

    #line 1222 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r176()
    {
        static $scond =
            array('iseven' => '!(1 & ', 'isnoteven' => '(1 & ', 'isodd' => '(1 & ', 'isnotodd' => '!(1 & ',);
        $op = strtolower(str_replace(' ', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $scond[ $op ];
    }

    #line 1236 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r177()
    {
        $this->_retvalue = 'array(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 1244 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r179()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1252 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r181()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . '=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1256 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r182()
    {
        $this->_retvalue =
            '\'' . $this->yystack[ $this->yyidx + -2 ]->minor . '\'=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1272 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r185()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor->to_smarty_php($this);
    }

    #line 1277 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r186()
    {
        $this->yystack[ $this->yyidx + -1 ]->minor->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 1282 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r187()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1286 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r188()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)' . $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1294 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r190()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\'' .
                                                              substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) .
                                                              '\']->value');
    }

    #line 1302 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r192()
    {
        $this->_retvalue =
            new Smarty_Internal_ParseTree_Code('(string)(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')');
    }

    #line 1306 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r193()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1310 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r194()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        if ($this->yyTraceFILE && $yyruleno >= 0 && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE,
                    "%sReduce (%d) [%s].\n",
                    $this->yyTracePrompt,
                    $yyruleno,
                    self::$yyRuleName[ $yyruleno ]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (isset(self::$yyReduceMap[ $yyruleno ])) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[ $yyruleno ]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[ $yyruleno ][0];
        $yysize = self::$yyRuleInfo[ $yyruleno ][1];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[ $this->yyidx ] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } else if ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 200 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        #line 193 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            $this->yystack[] = $x;
        }
        $yyendofinput = ($yymajor == 0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE,
                    "%sInput %s\n",
                    $this->yyTracePrompt,
                    $this->yyTokenName[ $yymajor ]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL && !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } else if ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } else if ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE,
                            "%sSyntax Error!\n",
                            $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[ $this->yyidx ]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE,
                                    "%sDiscard input token %s\n",
                                    $this->yyTracePrompt,
                                    $this->yyTokenName[ $yymajor ]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 && $yymx != self::YYERRORSYMBOL &&
                               ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } else if ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}

